# Generated by Django 4.2 on 2025-09-23 22:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('deputy', 'Депутат'), ('admin', 'Администратор'), ('guest', 'Гость')], default='guest', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название партии')),
                ('short_name', models.CharField(max_length=50, verbose_name='Краткое название')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='party_logos/')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('founded_date', models.DateField(blank=True, null=True, verbose_name='Дата основания')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='Цвет партии (HEX)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Партия',
                'verbose_name_plural': 'Партии',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Название заседания')),
                ('session_type', models.CharField(choices=[('plenary', 'Пленарное'), ('committee', 'Комитет'), ('working_group', 'Рабочая группа'), ('extraordinary', 'Внеочередное')], default='plenary', max_length=20)),
                ('date', models.DateTimeField(verbose_name='Дата и время')),
                ('agenda', models.TextField(verbose_name='Повестка дня')),
                ('location', models.CharField(max_length=200, verbose_name='Место проведения')),
                ('duration_minutes', models.IntegerField(default=60, verbose_name='Продолжительность (минут)')),
                ('documents', models.FileField(blank=True, null=True, upload_to='session_documents/')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Закрытое заседание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Заседание',
                'verbose_name_plural': 'Заседания',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Вопрос голосования')),
                ('description', models.TextField(verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='deputies.session', verbose_name='Заседание')),
            ],
            options={
                'verbose_name': 'Голосование',
                'verbose_name_plural': 'Голосования',
            },
        ),
        migrations.CreateModel(
            name='Deputy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='deputy_photos/')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('election_date', models.DateField(verbose_name='Дата избрания')),
                ('district', models.CharField(max_length=200, verbose_name='Избирательный округ')),
                ('biography', models.TextField(blank=True, verbose_name='Биография')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deputies', to='deputies.party', verbose_name='Партия')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deputy_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Депутат',
                'verbose_name_plural': 'Депутаты',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='DeputyVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(choices=[('for', 'За'), ('against', 'Против'), ('abstain', 'Воздержался')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deputy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='deputies.deputy')),
                ('vote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deputy_votes', to='deputies.vote')),
            ],
            options={
                'verbose_name': 'Голос депутата',
                'verbose_name_plural': 'Голоса депутатов',
                'unique_together': {('vote', 'deputy')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_present', models.BooleanField(default=False, verbose_name='Присутствовал')),
                ('absence_reason', models.CharField(blank=True, max_length=200, verbose_name='Причина отсутствия')),
                ('arrival_time', models.TimeField(blank=True, null=True, verbose_name='Время прибытия')),
                ('departure_time', models.TimeField(blank=True, null=True, verbose_name='Время ухода')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deputy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='deputies.deputy', verbose_name='Депутат')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='deputies.session', verbose_name='Заседание')),
            ],
            options={
                'verbose_name': 'Посещаемость',
                'verbose_name_plural': 'Посещаемость',
                'ordering': ['session', 'deputy'],
                'unique_together': {('deputy', 'session')},
            },
        ),
    ]
